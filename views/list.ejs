<%- include("header") -%>

<div class="logout">
    <button class="logout-button">
        <a href="/logout"><img src="./img/exit.png" alt="Logout" /></a>
    </button>
</div>

<!-- Google Calendar Icon -->
<div class="calendar-integration">
    <a href="/google-calendar">
        <img src="./img/calendar-icon.png" alt="Google Calendar" />
    </a>
</div>

<!-- Task List Section -->
<div class="task-container">
    <h1 class="task-title"><%= listTitle %></h1>

    <div class="task-list">
        <% listArray.forEach((item) => { %>
            <div class="task-item">
                <input type="checkbox" name="checkboxID" value="<%= item._id %>" onchange="deleteTask('<%= item._id %>')" />
                <div class="task-details">
                    <p contenteditable="true" class="task-name">
                        <%= item.name %>
                    </p>
                    <p class="task-time">
                        [<%= item.day %> | <%= item.time %> | <%= item.timezone %>]
                    </p>
                    <p class="task-description"><%= item.description %></p>
                    <% if (item.googleCalendarLink) { %>
                        <a href="<%= item.googleCalendarLink %>" target="_blank" class="calendar-link-btn">
                            Open in Google Calendar
                        </a>
                    <% } else { %>
                        <span class="calendar-link-disabled">No Calendar Link</span>
                    <% } %>
                </div>
            </div>
        <% }); %>
    </div>
    

    <!-- Add New Task Form -->
    <div class="task-form">
        <form action="/todo" method="post" onsubmit="return validateTime()">
            <input type="text" name="name" id="nameInput" placeholder="Task Name" autocomplete="off" class="input-field" />
            <input type="date" name="day" id="dayInput" class="input-field" />
            <input type="time" name="time" id="timeInput" class="input-field" />
            <select name="timezone" id="timezoneInput" class="input-field">
                <option value="UTC">UTC</option>
                <option value="GMT">GMT</option>
                <option value="EST">Eastern Standard Time (EST)</option>
                <option value="CST">Central Standard Time (CST)</option>
                <option value="PST">Pacific Standard Time (PST)</option>
                <option value="IST">Indian Standard Time (IST)</option>
                <!-- Add more options as needed -->
            </select>
            <textarea name="description" id="descriptionInput" placeholder="Description" class="input-field"></textarea>
            <button type="submit" class="submit-btn">+</button>
        </form>
        
    </div>
</div>


<!-- Calendar Section -->
<div id="calendar"></div>

<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.5/main.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        console.log("DOM fully loaded and parsed!");

        // Parse the tasks list from the server
        const tasks = JSON.parse('<%- JSON.stringify(listArray || []) %>');
        console.log("Tasks:", tasks);

        const calendarEl = document.getElementById("calendar");

        if (!calendarEl) {
            console.error("Calendar element not found!");
            return;
        }

        console.log("Calendar element found!");

        // Initialize the calendar
        const calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: "dayGridMonth",
            headerToolbar: {
                left: "prev,next today",
                center: "title",
                right: "dayGridMonth,timeGridWeek,timeGridDay",
            },
            events: tasks.map(function (task) {
                console.log("Adding task to calendar:", task);

                // Convert day and time into a proper DateTime object
                const taskStartDate = `${task.day}T${task.time}`;
                return {
                    title: task.name,
                    start: taskStartDate,
                    description: task.description,
                    timeZone: task.timezone,
                };
            }),
            eventClick: function (info) {
                alert(
                    `Task: ${info.event.title}\n` +
                    `Time: ${info.event.start.toLocaleString()}\n` +
                    `Description: ${info.event.extendedProps.description}`
                );
            },
        });

        calendar.render();
        console.log("Calendar rendered successfully!");
    });

    // Delete Task Function
    function deleteTask(taskId) {
        fetch("/delete", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ checkboxID: taskId }),
        })
            .then((response) => {
                if (response.ok) {
                    console.log("Task deleted successfully");
                    location.reload(); // Reload to reflect changes
                } else {
                    console.error("Failed to delete task");
                }
            })
            .catch((err) => console.error("Error:", err));
    }

    // Update Task Function
    function updateTask(taskId, name) {
        fetch("/update", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ taskId, name }),
        })
            .then((response) => {
                if (response.ok) {
                    console.log("Task updated successfully");
                } else {
                    console.error("Failed to update task");
                }
            })
            .catch((err) => console.error("Error:", err));
    }

    // Validate Time
    function validateTime() {
        const timeInput = document.getElementById("timeInput").value;
        const timePattern = /^(?:[01]\d|2[0-3]):[0-5]\d$/;
        if (!timePattern.test(timeInput)) {
            alert("Invalid time format! Please use HH:mm format.");
            return false;
        }
        return true;
    }
</script>


<%- include("footer") -%>

<!-- CSS Styling -->
<style>
    body {
        font-family: 'Roboto', sans-serif;
        background-color: #F6F6F6;
        color: #333;
    }

    .logout-button a {
        display: inline-block;
        text-decoration: none;
        font-size: 16px;
        color: #fff;
        background-color: #FF6B6B;
        padding: 10px 20px;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    .logout-button a:hover {
        background-color: #F02E2E;
    }

    .calendar-integration {
        position: fixed;
        bottom: 20px;
        right: 20px;
    }

    .calendar-integration img {
        width: 50px;
        height: 50px;
        cursor: pointer;
        transition: transform 0.2s ease;
    }

    .calendar-integration img:hover {
        transform: scale(1.1);
    }

    .calendar-link-btn {
        display: inline-block;
        padding: 8px 12px;
        color: white;
        background-color: #4285f4;
        text-decoration: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    .calendar-link-btn:hover {
        background-color: #357ae8;
    }

    .calendar-link-disabled {
        display: inline-block;
        padding: 8px 12px;
        color: gray;
        background-color: #e0e0e0;
        border-radius: 5px;
        cursor: not-allowed;
    }

    .task-container {
        background-color: #fff;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .task-title {
        font-size: 24px;
        color: #5C4E9A;
        margin-bottom: 20px;
        text-align: center;
    }

    .task-list {
        margin-bottom: 30px;
    }

    .task-item {
        display: flex;
        align-items: center;
        padding: 10px;
        border-bottom: 1px solid #ddd;
    }

    .task-item input[type="checkbox"] {
        margin-right: 15px;
    }

    .task-details {
        flex: 1;
    }

    .task-name {
        font-weight: bold;
        font-size: 18px;
        margin: 0;
    }

    .task-time {
        font-size: 14px;
        color: #888;
        margin: 5px 0;
    }

    .task-description {
        font-size: 16px;
        color: #555;
        margin: 5px 0;
    }

    .task-form {
        margin-top: 20px;
        padding: 20px;
        background-color: #F1F1F1;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .input-field {
        width: 100%;
        padding: 10px;
        margin: 8px 0;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-sizing: border-box;
    }

    .submit-btn {
        background-color: #5C4E9A;
        color: white;
        font-size: 18px;
        padding: 12px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        width: 100%;
        margin-top: 10px;
    }

    .submit-btn:hover {
        background-color: #4B3C7A;
    }

    #calendar {
        max-width: 900px;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
</style>
